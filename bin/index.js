#!/usr/bin/env node
/*!
@io-arc/preset-setup-files
Make it easy to install frequently used files.

Version: 1.0.0
License: MIT
Documents: https://github.com/io-arc/preset-setup-files#readme

Copyright (c) 2021 arc one
*/
"use strict";var e=require("commander"),t=require("kleur"),r=require("update-notifier"),i=require("fs"),s=require("os"),c=require("cpx"),o=require("inquirer"),l=require("path");function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var a=n(r),h=n(i),p=n(s),u=n(c),d=n(o),m=n(l);class f{exit(e){console.log(t.red("Oops X(")),e&&console.log(t.red(JSON.stringify(e))),process.exit(1)}}class g extends f{constructor(){if(super(),this.#choiceDataFile=`${p.default.homedir()}/.preset-setup-files-config.json`,!h.default.existsSync(this.#choiceDataFile))return;const{choices:e}=JSON.parse(h.default.readFileSync(this.#choiceDataFile,"utf8"));this.#choices=e}#choiceDataFile;#choices;existChoices(){return this.#choices}saveChoices(e){const r={choices:e};try{h.default.writeFileSync(this.#choiceDataFile,JSON.stringify(r)),console.log(t.green("Create a config file into ")+t.bold().blue(this.#choiceDataFile))}catch(e){this.exit(e)}}}const k={editorConfig:".editorConfig",gitignore:".gitignore",npmrc:".npmrc",npmignore:".npmignore",browserslistrc:".browserslistrc",prettierrc:".prettierrc",prettierrcJson:".prettierrc.json",prettierrcJson5:".prettierrc.json5",prettierrcYml:".prettierrc.yml",prettierrcYaml:".prettierrc.yaml",prettierrcJs:".prettierrc.js",prettierrcCjs:".prettierrc.cjs",prettierrcConfigJs:".prettierrc.config.js",prettierrcConfigCjs:".prettierrc.config.cjs",prettierrcToml:".prettierrc.toml",eslintrcJs:".eslintrc.js",eslintrcCjs:".eslintrc.cjs",eslintrcYml:".eslintrc.yml",eslintrcYaml:".eslintrc.yaml",eslintrcJson:".eslintrc.json",eslintignore:".eslintignore"};class v extends f{constructor(e){super(),this.#checkedItem=[k.editorConfig,k.gitignore,k.browserslistrc,k.prettierrc,k.eslintrcYml],this.#checkbox=async()=>{const{editorConfig:e,gitignore:r,npmrc:i,npmignore:s,browserslistrc:c,prettierrc:o,prettierrcJson:l,prettierrcJson5:n,prettierrcYml:a,prettierrcYaml:h,prettierrcJs:p,prettierrcCjs:u,prettierrcConfigJs:m,prettierrcConfigCjs:f,prettierrcToml:g,eslintrcJs:v,eslintrcCjs:y,eslintrcYml:B,eslintrcYaml:C,eslintrcJson:w,eslintignore:j}=k;try{const t=await d.default.prompt([{type:"checkbox",name:"templates",message:"Choice setup files",loop:!1,choices:[{value:e,checked:this.#setBool(e)},{value:r,checked:this.#setBool(r)},{value:i,checked:this.#setBool(i)},{value:s,checked:this.#setBool(s)},{value:c,checked:this.#setBool(c)},new d.default.Separator,{value:o,checked:this.#setBool(o)},{value:l,checked:this.#setBool(l)},{value:n,checked:this.#setBool(n)},{value:a,checked:this.#setBool(a)},{value:h,checked:this.#setBool(h)},{value:p,checked:this.#setBool(p)},{value:u,checked:this.#setBool(u)},{value:m,checked:this.#setBool(m)},{value:f,checked:this.#setBool(f)},{value:g,checked:this.#setBool(g)},new d.default.Separator,{value:v,checked:this.#setBool(v)},{value:y,checked:this.#setBool(y)},{value:B,checked:this.#setBool(B)},{value:C,checked:this.#setBool(C)},{value:w,checked:this.#setBool(w)},new d.default.Separator,{value:j,checked:this.#setBool(j)},new d.default.Separator]},{type:"confirm",name:"confirm",message:"Are you sure you want to create this?",default:!0}]);return this.#updateChecked(t.templates),{confirm:t.confirm}}catch(e){return console.log(t.red(e)),1}},this.#updateChecked=e=>{this.#checkedItem=e},this.#setBool=e=>this.#checkedItem.includes(e),e&&(this.#checkedItem=e)}#checkedItem;items(){return this.#checkedItem}async choices(){const e=await this.#checkbox();if("number"!=typeof e){if(!e.confirm){const[e]=await Promise.all([this.choices()]);return e}}else this.exit()}async copy(){try{const{overwrite:e}=await d.default.prompt({type:"confirm",name:"overwrite",message:"If the file has the same name, it will be overwritten.",default:!1});u.default.copySync(`${m.default.dirname(__filename)}/templates/{${this.#checkedItem.join(",")}}`,"",{update:e}),console.log(t.green("=== Files copy is done! ==="))}catch(e){this.exit(e)}}#checkbox;#updateChecked;#setBool}a.default({pkg:{name:"@io-arc/preset-setup-files",version:"1.0.0"}}).notify(),process.stdin.resume(),process.on("SIGINT",(()=>{console.log(t.green("Bye !")),process.exit(0)})),e.program.version("1.0.0").option("--custom","Customize default choices and copy directories.",!1).parse(process.argv),(async({custom:e})=>{const r=new g,i=new v(r.existChoices());e&&(console.log(t.bold().blue("=== Initialize default choices ===")),await i.choices(),r.saveChoices(i.items()),process.exit(0)),await i.choices(),await i.copy(),process.exit(0)})(e.program.opts());
